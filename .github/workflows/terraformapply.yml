name: Terraform Deploy
on:
  workflow_run:
    workflows: ["Terraform Build"]
    types:
      - completed
  workflow_dispatch: {}

jobs:
  terraform-deploy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        region: [eastus2, centralus]
        environment: [connectivity]
    environment: ${{ matrix.environment }}

    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - run: |
          echo ${{ github.event.workflow_run.id }}

      - uses: actions/download-artifact@v4
        name: Download Terraform Plan Artifact
        with:
          name: tfplan-${{ matrix.environment }}-${{ matrix.region }}-${{ github.event.workflow_run.id }}.zip
          run-id: ${{ github.event.workflow_run.id }}

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: terraformplan.yml #${{ github.event.workflow_run.id }}
          name: tfplan-${{ matrix.environment }}-${{ matrix.region }}.zip
          workflow_conclusion: success

      - name: Initialize Terraform
        id: terraform-init
        run: |
          ls -a
          terraform init -reconfigure -input=false  -backend-config="storage_account_name=sttf${{ steps.envsubstr.outputs.substring }}${{ steps.regionsubstr.outputs.substring }}001" -backend-config="resource_group_name=rg-tf-backend-${{ matrix.environment }}-${{ matrix.region }}-001" -backend-config="container_name=tfstate-${{ matrix.environment }}-${{ matrix.region }}" -backend-config="key=terraform.tfstate" #-backend-config="access_key=$(backendstoragekey)"
        working-directory: ./connectivity

      - name: Terraform apply
        working-directory: ./connectivity
        run: |
          terraform apply -input=false -var="connectivity_subscription=${{ secrets.SUBSCRIPTION_ID }}" -var="location=${{ matrix.region }}" -var="resource_group_name=rg-tf-${{ matrix.environment }}-${{ matrix.region }}-001" -var-file=connectivity-${{ matrix.region }}.tfvars  -auto-approve
