name: Azure Landing Zone for Connectivity - backup

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - master

permissions:
  contents: read
  id-token: write

# env:
#   client-id: ${{ secrets.AZURE_CLIENT_ID }}
#   tenant-id: ${{ secrets.AZURE_TENANT_ID }}
#   subscription-id: ${{ secrets.SUBSCRIPTION_ID }}

jobs:
  terraform-plan:
    name: Terraform Plan for Connectivity
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        region: [eastus2, centralus]
        subscription: [connectivity] 
    environment: connectivity-build 

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Azure using OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}

      - uses: bhowell2/github-substring-action@1.0.2
        id: envsubstr
        with:
          value: "${{ matrix.subscription}}"
          length_from_start: 4

      - uses: bhowell2/github-substring-action@1.0.2
        id: regionsubstr
        with:
          value: "${{ matrix.region }}"
          length_from_start: 6

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Format Check
        id: terraform-fmt
        run: terraform fmt -check
        working-directory: ./connectivity
        continue-on-error: true

      - name: Initialize Terraform
        id: terraform-init
        working-directory: ./connectivity
        run: |
          terraform init -reconfigure \
          -input=false  \
          -backend-config="storage_account_name=sttf${{ steps.envsubstr.outputs.substring }}${{ steps.regionsubstr.outputs.substring }}001" \
          -backend-config="resource_group_name=rg-tf-backend-${{ matrix.subscription }}-${{ matrix.region }}-001" \
          -backend-config="container_name=tfstate-${{ matrix.subscription}}-${{ matrix.region }}" \
          -backend-config="key=terraform.tfstate" \

      - name: Terraform Validate
        id: terraform-validate
        run: terraform validate -no-color
        working-directory: ./connectivity
      
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.52.0

      - name: Show version
        run: tflint --version
      
      - name: Init TFLint
        working-directory: ./connectivity
        run: tflint --init
      
      - name: Run TFLint
        working-directory: ./connectivity
        run: tflint  --minimum-failure-severity warning -f compact

      # - name: Lint Terraform code
      #   working-directory: ./connectivity
      #   run: tflint --format=json . > tflint.json
        
      # - name: Check tflint output
      #   working-directory: ./connectivity
      #   run: |
      #     if [[ ! -s tflint.json ]]; then
      #       echo "No tflint output"
      #       exit 0
      #     fi
      #     cat tflint.json
      #     if [[ $(cat tflint.json | jq -r 'length') -gt 0 ]]; then
      #       echo "Tflint errors found"
      #       exit 1
      #     fi

      - name: Terraform Plan
        working-directory: ./connectivity
        run: |
          terraform plan \
          -var="connectivity_subscription=${{ secrets.SUBSCRIPTION_ID }}" \
          -var="location=${{ matrix.region }}" \
          -var="resource_group_name=rg-tf-${{ matrix.subscription}}-${{ matrix.region }}-001" \
          -var-file=connectivity-${{ matrix.region }}.tfvars  \
          -out=tfplan-${{ matrix.subscription}}-${{ matrix.region }}-${{ github.run_id }}.tfplan \
          -input=false

      - name: Show Terraform Plan
        working-directory: ./connectivity
        run: |
          terraform show -json tfplan-${{ matrix.subscription}}-${{ matrix.region }}-${{ github.run_id }}.tfplan > tfplan-${{ matrix.subscription}}-${{ matrix.region }}.json
          cat tfplan-${{ matrix.subscription}}-${{ matrix.region }}.json | jq '.resource_changes[] | {address: .address, change: .change.actions}'
        continue-on-error: true

      - name: Remove plugins from Terraform Directory
        run: |
          rm -rf ./connectivity/.terraform

      - name: Compress Artifact
        run: zip -r tfplan-${{ matrix.subscription}}-${{ matrix.region }}.zip ./connectivity

      - name: Upload Terraform Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ matrix.subscription}}-${{ matrix.region }}-${{ github.run_id }}.zip
          path: ./*.zip
          retention-days: 2
          if-no-files-found: warn
          include-hidden-files: true

  terraform-apply:
    name: Terraform Apply for Connectivity
    runs-on: ubuntu-latest
    needs: terraform-plan

    strategy:
      fail-fast: false
      matrix:
        region: [eastus2, centralus]
        subscription: [connectivity]
    environment: connectivity-deploy
    if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'push' }}
    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - uses: bhowell2/github-substring-action@1.0.2
        id: envsubstr
        with:
          value: "${{ matrix.subscription}}"
          length_from_start: 4

      - uses: bhowell2/github-substring-action@1.0.2
        id: regionsubstr
        with:
          value: "${{ matrix.region }}"
          length_from_start: 6

      - name: Download Terraform Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan-${{ matrix.subscription}}-${{ matrix.region }}-${{ github.run_id }}.zip

      - name: Login to Azure using OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}

      - run: |
          ls -a
        name: List Files in Connectivity Directory

      - name: extract tfplan
        run: unzip -o tfplan-${{ matrix.subscription}}-${{ matrix.region }}.zip -d ./connectivity

      - name: Initialize Terraform
        id: terraform-init
        working-directory: ./connectivity/connectivity
        run: |
          terraform init -reconfigure \
          -input=false  \
          -backend-config="storage_account_name=sttf${{ steps.envsubstr.outputs.substring }}${{ steps.regionsubstr.outputs.substring }}001" \
          -backend-config="resource_group_name=rg-tf-backend-${{ matrix.subscription}}-${{ matrix.region }}-001" \
          -backend-config="container_name=tfstate-${{ matrix.subscription}}-${{ matrix.region }}" \
          -backend-config="key=terraform.tfstate"

      - name: Terraform Apply
        working-directory: ./connectivity/connectivity
        run: |
          terraform apply -input=false \
          -var="connectivity_subscription=${{ secrets.SUBSCRIPTION_ID }}" \
          -var="location=${{ matrix.region }}" \
          -var="resource_group_name=rg-tf-${{ matrix.subscription}}-${{ matrix.region }}-001" \
          -var-file=connectivity-${{ matrix.region }}.tfvars  \
          -auto-approve
