name: Azure Landing Zone for Connectivity

on:
  workflow_dispatch:
  push:
    branches:
      - master

permissions:
  contents: read
  id-token: write

jobs:
  terraform-build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        region: [eastus2, centralus]
        environment: [connectivity]
    environment: ${{ matrix.environment }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Azure using OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}

      - uses: bhowell2/github-substring-action@1.0.2
        id: envsubstr
        with:
          value: "${{ matrix.environment }}"
          length_from_start: 4

      - uses: bhowell2/github-substring-action@1.0.2
        id: regionsubstr
        with:
          value: "${{ matrix.region }}"
          length_from_start: 6

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Format Check
        id: terraform-fmt
        run: terraform fmt -check
        working-directory: ./connectivity
        continue-on-error: true

      - name: Initialize Terraform
        id: terraform-init
        run: terraform init -reconfigure -input=false  -backend-config="storage_account_name=sttf${{ steps.envsubstr.outputs.substring }}${{ steps.regionsubstr.outputs.substring }}001" -backend-config="resource_group_name=rg-tf-backend-${{ matrix.environment }}-${{ matrix.region }}-001" -backend-config="container_name=tfstate-${{ matrix.environment }}-${{ matrix.region }}" -backend-config="key=terraform.tfstate" #-backend-config="access_key=$(backendstoragekey)"
        working-directory: ./connectivity

      - name: Terraform Validate
        id: terraform-validate
        run: terraform validate -no-color
        working-directory: ./connectivity

      - name: Terraform Plan
        working-directory: ./connectivity
        run: |
          terraform plan -var="connectivity_subscription=${{ secrets.SUBSCRIPTION_ID }}" -var="location=${{ matrix.region }}" -var="resource_group_name=rg-tf-${{ matrix.environment }}-${{ matrix.region }}-001" -var-file=connectivity-${{ matrix.region }}.tfvars -out=tfplan-${{ matrix.environment }}-${{ matrix.region }}

      - name: Compress Artifact
        run: zip -r tfplan-${{ matrix.environment }}-${{ matrix.region }}.zip ./connectivity

      - name: Upload Terraform Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ matrix.environment }}-${{ matrix.region }}-${{ github.run_id }}.zip
          path: ./*.zip
          retention-days: 2
          if-no-files-found: warn
          include-hidden-files: true

      - uses: actions/download-artifact@v4
        name: Download Terraform Plan Artifact
        with:
          name: tfplan-${{ matrix.environment }}-${{ matrix.region }}-${{ github.run_id }}.zip
          run-id: ${{ github.event.workflow_run.id }}

      - name: Show Workflow Run ID
        run: |
          echo "Workflow Run ID: ${{ github.run_id }}"
